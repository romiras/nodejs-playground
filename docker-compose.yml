version: "3"

services:
  demo:
    build:
      context: .
    depends_on:
      - redis
      - mysql
      - rabbitmq
    environment:
      REDIS_URL: "${REDIS_URL}"
      DATABASE_URL: "${DATABASE_URL}"
      HOST_REDIS_PORT: "${HOST_REDIS_PORT}"
      RABBITMQ_URL: "${RABBITMQ_URL}"
      NODE_ENV: dev

  adminer:
    image: adminer
    restart: "always"
    ports:
      - "${HOST_ADMINER_PORT:-8088}:8080"

  mysql:
    image: mysql:${MYSQL_VERSION:-5.6}
    restart: "${MYSQL_RESTART:-unless-stopped}"
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_PASSWORD:-ci_pass}"
      MYSQL_DATABASE: "${MYSQL_DATABASE-ci_test}"
    ports:
      - "${HOST_MYSQL_PORT:-33061}:3306"
    volumes:
      - "mysql:/var/lib/mysql"
      - "./docker/mysql/scripts:/docker-entrypoint-initdb.d"

  redis:
    image: redis:${REDIS_VERSION:-6.0-alpine}
    restart: "${REDIS_RESTART:-unless-stopped}"
    command: redis-server
    ports:
      - "${HOST_REDIS_PORT:-6379}:6379"
    volumes:
      - "redis:/data"

  rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION:-3.8-management-alpine}
    restart: "${RABBITMQ_RESTART:-unless-stopped}"
    ports:
      - "${HOST_RABBITMQ_PORT:-5672}:5672"
      - "15672:15672"
    volumes:
      - "rabbitmq:/var/lib/rabbitmq"

volumes:
  redis:
  mysql:
  rabbitmq:
